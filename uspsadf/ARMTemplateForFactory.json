{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "uspsadf"
		},
		"gpsblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'gpsblob'"
		},
		"sqledgesim_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqledgesim'"
		},
		"KeyVaultEUS2_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://bjvaulteus2.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/gpsblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "GPS data from MDD",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('gpsblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVaultEUS2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVaultEUS2_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqledgesim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure SQL Database to simulate SQL Edge",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqledgesim_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultEUS2",
							"type": "LinkedServiceReference"
						},
						"secretName": "brianjaceusdb"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultEUS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RawGPS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gpsblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SYS30358_14124D82CA_07-10-2019_InternalGpsData.log",
						"container": "uspsmdd"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gpsblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GPSGLL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqledgesim",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo.gpsraw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqledgesim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RawGPS",
								"type": "DatasetReference"
							},
							"name": "sourceGPS",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GPSGLL",
								"type": "DatasetReference"
							},
							"name": "sqlDB"
						}
					],
					"script": "\n\nsource(output(\n\t\tTimeStamp as string,\n\t\tValue as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipLines: 2) ~> sourceGPS\nsourceGPS select(mapColumn(\n\t\tTimeStamp,\n\t\tValue\n\t)) ~> timeandvalue\nfilterGPLL derive(latitude = toDecimal(split(Value, ',')[2], 10, 5),\n\t\tdir_latitude = split(Value, ',')[3],\n\t\tlongitude = toDecimal(split(Value, ',')[4], 10, 5),\n\t\tdir_longitude = split(Value, ',')[5],\n\t\tutc_position = toDecimal(split(Value, ',')[6], 15, 5),\n\t\tis_valid = split(Value, ',')[7],\n\t\tmode = split(Value, ',')[8]) ~> gpgll\ntimeandvalue derive(recordtype = split(Value, ',')[1]) ~> timerecordandvalue\ntimerecordandvalue filter(recordtype=='$GPGLL') ~> filterGPLL\ngpgll filter(is_valid=='A') ~> filterValid\nfilterValid sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tkeys:['TimeStamp']) ~> sqlDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RawGPS')]",
				"[concat(variables('factoryId'), '/datasets/GPSGLL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IngestGPS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceGPS": {},
									"sqlDB": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}